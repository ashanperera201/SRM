import { IDTextModel } from '../ViewModels/idTextModel';
import { NegotiationStyleViewModel } from './negotiation-style-view-model';
import { RFXRulesViewModel } from './rfx-rules-view-model';

export class RFQViewModel {
    id: any;
    rfqName: string;
    rfqDescription: string;
    rfxType: string;
    rfqNo: string;
    revNo: string;
    buyerID: any;
    currencyID: any;
    currencyText: string;
    rFQParentId: any;
    defaultCurrencyID: string;
    negitiationStyleID: any;
    negitiationStyleText: string;
    defaultNegitiationStyleID: string;
    paymentTermID: string;
    biddingStyleID: any;
    biddingStyleText: string;
    defaultBiddingStyleID: string;
    bidOpeningDate: string;
    bidClosingDate: string;
    awardDate: string;
    publishDate: string;
    deliveryAddressID: any;
    shipViaCodeID: any;
    deliveryTermsID: any;
    countryID: any;
    cityID: any;
    portID: any;
    site: string;
    isTwoStageRFx: boolean;
    isDisplayRank: boolean;
    estimatedAmount: number;
    outcome: string;
    outcomeID: string;
    project: string;
    programID: any
    projectType: string;
    isTemplateSelectionPage: boolean;
    currencyList: any[];
    paymentTermsList: IDTextModel[];
    negotiationStyleList: IDTextModel[];
    biddingStyleList: IDTextModel[];
    deliveryTermsList: IDTextModel[];
    outcomeList: IDTextModel[];
    deliveryAddressList: IDTextModel[];
    shipViaCodeList: IDTextModel[];
    countryList: IDTextModel[];
    basicCurrencyId: any;
    rateDate: Date;
    statusID: any;
    statusDate: Date;
    ifsProjectID: any;
    technicalScoring: boolean;
    scoringWeightToSuppliers: boolean;
    commercialScoring: boolean;
    scoringCriteriaToSuppliers: boolean;
    statusName: string;
    nextStatusName: string;
    isManualBidClosed: boolean;
    projectNo: string;
    isAlternateCurrencyApplicable: boolean;
    iFSProgramId: any;
    awardedOn: Date;
    ifsSiteId: any;
    data: any;
    awardId: any;
    previewId: any;
    afterROACompletedId: any;
    previewCount: number;
    previewDate: string;
    awardCount: number;
    roaCount: number;
    projectCodeList: IDTextModel[];
    programList: IDTextModel[];
    siteList: IDTextModel[];
    timeZoneList: IDTextModel[];
    cityId: any;
    cityList: any[];
    timeZoneId: any;
    publishDateList: any;
    awardDateBeforeList: any;
    awardDateAfterList: any;
    outcomeLists: any;
    eventOnAwardDate: string;
    buyerName: string;
    shipViaCodeName: string;
    siteName: string;
    cityName: string;
    isSaveAsDraft: boolean;
    isReview: boolean;
    isSendForApproval: boolean;
    isPublish: boolean;
    isApproveReject: boolean;
    rfxRules: RFXRulesViewModel
    isReviseRFX: boolean;
    isPauseRFX: boolean;
    isCancelled: boolean;
    isevaluationInitiationRFX: boolean;
    isROAApproveReject: boolean;
    isROAPublish: boolean;
    isRankVisible: boolean;
    rankNo: string;
    isBiddingPriceVisible: boolean;
    biddingPrice: string;
    negotiationStyles: NegotiationStyleViewModel[];
    isAmend: boolean;
    tbeApprovalStatusName: string;
    cbeApprovalStatusName: string;
    isTBEApproved: boolean;
    isCBEApproved: boolean;
    isTBESendForApproval: boolean;
    isCBESendForApproval: boolean;
    isEvaluatorViewer: boolean;
    isTBEBuyerOrApprover: boolean;
    isCBEBuyerOrApprover: boolean;
    documentClass: string;
    bidClosingDateTimeArrived: boolean;
    programName: string;
    isManual: boolean;
    approvalType: string;
}

export class RFQExportModel {
    rfqName: string;
    rfqDescription: string;
    rfqNo: string;
    negotiationStyleName: any;
    paymentTermName: string;
    biddingStyleName: any;
    bidOpeningDate: Date;
    bidClosingDate: Date;
    publishDate: Date;
    deliveryAddressID: any;
    shipViaCodeName: any;
    deliveryTermsName: any;
    countryName: any;
    cityName: any;
    siteName: string;
    estimatedAmount: number;
    outcomeName: string;
    projectName: string;
    programIDName: any
    projectTypeName: string;
    awardedOn: Date;
    previewDate: Date;
    eventOnAwardDate: Date;
    timeZoneName:any;
    Lines:RFQLineExportModel[]; 
}

export class RFQLineExportModel {
    rfqName: string;
    LineNo: string;
    PRNo: string;
    PartID: any;
    SubProjectCode: string;
    Activity: any;
    PartDescription: any;
    Quantity: any;
    IFSReferncePrice: any;
    TargetPrice: any;
    UoM: any;
    NeedByDate: any;
    ShowPrices: any;  
}